Task B: Modern SaaS Landing Page & Component System
Overview
Create a stunning landing page for "ADmyBRAND AI Suite" - our fictional AI-powered marketing tool, plus a reusable component library.
Core Requirements
ðŸŒŸ Landing Page Sections
Hero Section - Compelling headline, subtext, CTA, hero image/video
Features Section - 6+ features with icons and descriptions
Pricing Cards - 3 tiers with feature comparisons
Testimonials Carousel - Customer reviews with photos
FAQ Section - Collapsible questions
Footer - Links, social media, contact info
ðŸŽ¨ UI/UX Requirements (HEAVILY WEIGHTED)
2025 Design Trends - Implement glassmorphism, subtle animations, modern typography
Stunning Visual Design - Professional, premium feel that converts
Perfect Typography - Clear hierarchy, readable fonts
Smooth Scrolling Animations - Elements animate in on scroll
Mobile-First Responsive - Flawless on all devices
âš¡ Technical Implementation
Next.js 14+ with App Router and TypeScript
Component Library - Build 8+ reusable components (Button, Card, Modal, etc.)
Modern Styling - Tailwind CSS or styled-components
Form Handling - Contact form with validation
Performance Optimized - Fast loading, image optimization
Bonus Features
Interactive Pricing Calculator
Demo Video/Animation
Blog/Resources Section
Advanced Animations (Framer Motion/GSAP)
ðŸš€ AI Tools & Resources
Recommended AI Assistants
GitHub Copilot - Code completion and generation
v0.dev - UI component generation
ChatGPT/Claude - Architecture planning and debugging
Bolt.new - Full-stack app generation
Cursor IDE - AI-powered development environment
UI Inspiration Sources
Dribbble/Behance - Modern dashboard and SaaS designs
UI Libraries - shadcn/ui, MUI, Chakra UI documentation
Design Systems - Study modern SaaS companies' design patterns
ðŸ“‹ Submission Checklist
Required Deliverables
 GitHub Repository - Clean, documented codebase
 Live Demo - Deployed on Vercel/Netlify (Highly Preferred)
 README.md - Setup instructions and feature overview
 AI Usage Report - 200-300 words on your AI-assisted workflow




AI Usage Report Format
text
## AI Tools Used
- Primary tools: [List main AI assistants]
- Key use cases: [How you used AI for different tasks]

## Sample Prompts (2-3 examples)
1. "Create a responsive React dashboard component with..."
2. "Help me implement smooth scroll animations for..."

## AI vs Manual Work Split
- AI-generated: [Percentage and what parts]
- Manual coding: [What you coded yourself]
- Customization: [How you adapted AI suggestions]

ðŸŽ¯ Evaluation Criteria
Criteria
Weight
What We Look For
Beautiful UI Design
40%
Modern aesthetics, visual hierarchy, consistency
AI Tool Usage
25%
Efficient use of AI assistants for rapid development
Code Quality
20%
Clean, reusable components, best practices
Functionality
10%
Features work smoothly, good UX
Documentation
5%
Clear README, code comments

ðŸ’¡ Pro Tips
Design Excellence
Study modern SaaS websites - Notion, Linear, Vercel for inspiration
Use consistent spacing - 8px grid system works well
Color Psychology - Choose colors that convey trust and professionalism
Typography Hierarchy - Clear distinction between headers, body, and captions
AI Optimization
Be specific in prompts - Include context about React version, styling approach
Iterate quickly - Use AI to generate multiple variations, then refine
Combine tools - Use different AI assistants for different strengths
Learn from outputs - Study AI-generated code to improve your own skills
Performance & Quality
Optimize images - Use Next.js Image component
Semantic HTML - Proper heading structure, ARIA labels
Fast loading - Code splitting, lazy loading
Cross-browser testing - Ensure compatibility
